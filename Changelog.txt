This is based on the source code that was released on July 4, 2009.



2024 - GString::FormatV() uses va_copy() by the _LINUX64 preprocessor directive
2024 - GException  convert WCHAR using a GString for 64 bit build
2024 - removed comparison of pointer to integer 0 from SMTP code for gcc
  	 - removed unneeded libnsl from makefile.linux for example app ObjectsFromXML 
	 - remove __debugbreak();
	 - added #include	<x86intrin.h>	for _lrotl() , _lrotr() definitions in TwoFish.h in Ubuntu



July 9 2009	 - A small change was made for compiler compatibility with Visual Studio 9.
Sept 14 2009 - Negative integer values now map correctly.  See line 452 of MemberDescriptor.cpp
Oct 23 2009  - 2 new hash functions added to the SHA256 source
Oct 31 2009 - 2 new methods in XMLObject.cpp FromXMLX() and FromXMLFileX() to provide a non-exception based interface
Nov 5 2009 - added 1 new method to GString - ReplaceChars()
Nov 5 2009 - Replace any invalid characters in the mapped tag name <>&"'/ with an _ see XMLObject::RegisterMember()
Nov 30 2009 - Added AppendEscapeXMLReserved() for type UserStringCollection in MemberDescriptor.cpp
Nov 30 2009 - removed a debug dump() from Schema.cpp that was hardcoded to "d:\\"
Nov 30 2009 - check for NULL [g_pchLogFile] in TRACE macros in FrameworkAuditlog.h
Nov 30 2009 - Removed "GPerformanceTimer.h" from xmlObjectFramework.h
Nov 30 2009 - Added FreeErrorDescriptions() to GException.cpp
Dec 2 - removed FreeErrorDescriptions() put the logic into GlobalErrorLanguage::~GlobalErrorLanguage() to GException.cpp
Dec 2 - fixed String Collection serialization bug per Nadim from codeproject discussion in MemberDescriptor.cpp
Dec 3 - removed various unused variables and type cast warnings, added catch(...) to FromXMLX()
Dec 21 - removed various memory leaks.  Some were not actual leaks but were reported by memory diagnostic tools because one time static heap allocations were never freed.
Dec 27 - Updated MFC support, added new sample program MFCTypesFromXML
Dec 28 - Fixed reference counting errors.  Verified all 65 test cases in "ObjectCache" sample.
Dec 31 - All Sample programs updated and tested under VS2010, and g++ on Ubuntu and Fedora
Dec 31 - XMLObject now maps to all native "G" classes.
Dec 31 - New flag added to allow Unix style linefeeds(\n) or Windows style linefeeds(\r\n) in the output xml.
Dec 31 - Consolidated all abstraction implementation files, 1 for MFC, 1 for Rogue Wave, 1 for all G classes.
Apr 14 2010 - made several small syntax changes to include Borland C++ compatibility
Apr 28 - Only attempt to load .DLL and .SO files for Language Drivers - previously it tried every file in the Drivers directory
Apr 30 - Added GetObjectDataValue() and SetObjectDataValue() to provide an 'automatic' default XMLObjectDataHandler handler
May 01 - Added Perl and Python Language drivers 
May 03 - Language Driver delimiter change
May 03 - Added new files: ServerCoreCustomHTTP.cpp  PluginBuilderLowLevelStatic.h   GHTTPMultiPartPOST.h   GHTTPMultiPartPOST.cpp  
May 03 - removed inline code in PluginBuilder.h and Created PluginBuilder.cpp for borland compiler compatibility.
Aug 10 - added GString::UnEscapeURL() and updated ServerCoreCustomHTTP.cpp to use it.
Aug 10 - added xmlFoundation to the build dependencies in the VC6 project.
Sep 29 - added support for the the C++ double data type, after heavy production testing, the code was contributed by Nadim Dakkak
Sep 30 - removed empty values from the GetObjectDataValue() and SetObjectDataValue() support added on Apr 30
Sep 30 - updated the remainder of the copyright notices in the comments to reflect the year 2010 - (I was a little late this year)
Sep 30 - Added calls to BufferTerminate() in multiple places that may have been or become cumulative memory leaks.
Nov 3 - Added 64 bit portability notes to GPerformanceTimer.cpp and documented an alternate implementation for Windows machines
Nov 3 - In ServerCore.cpp changed source code that represented ascii 168 as ' ' to (char)168 for Chinese source compatibility.
Nov 4 - added a 64 bit timer routine to GPerformanceTimer.cpp
Nov 4 - Changed numbered types to an enumeration (purely a source code readability change - not a logic change) in RelationshipWrapper.h
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
Dec 3, 2012 Port to 64 bit under Windows.  Search for _WIN64 to see all the changes
Dec 6, added the STL example and the file AbstractionSTD.h
Dec 7, added virtual ~dtor to ObjectDataHandler
Dec 7, passed the _cdata value back in the ObjectDataHandler - added case for xml::_cdata in XMLObjectFactory::receiveIntoObject()
Dec 10, added XMLObject::GetObjectDataStorage() for more optimized method of accessing Object Data
Dec 10, added Member maps for char, short, and char sz[n] and examples that use them
Dec 10, added CDoubleArrayAbstraction to AbstractionsMFC.h
Dec 11, changed Abstraction base classes to use __int64 for Size()
Dec 11, changed GString to use __int64 for buffer size and index
Dec 11, Updated the Linux port, built everything with the latest g++ compiler (only the STL example program is not building)
12-12-12, added __int64 everywhere necessary so that from the XML Lex through the Object Factory XML strings are 64 bit length - however the primary buffer index used by xmlLex wasnt widened until 2024 unknowningly neglected all this time imposing a 4.2GB limit on source XML input all these years until 2024.
12-12-12, regression tested all functionality in 32 and 64 bit windows with VC6 and VS2012 - also verified all output in Linux
Dec 17, fixed MemberDescriptor::SetSerializable() to properly remove flag: m_memberStateFlags &= ~DATA_SERIALIZE;
Dec 17, added PREVENT_ATTRIB_AUTOMAP flag for XMLObject::ModifyObjectBehavior()
Dec 17, added examples for Inheritance and for mapping to Union,Struct, and Typedef to the RareUseExamples program
Dec 21, updated the primary HTML article in the root of the source distribution
Feb 7, 2013 - Made several changes to fix caching while using mapped key parts.  XMLObject::CopyState() contains most of the changes.
Feb 8 - Added a missing IncRef() into the XMLObject::CopyState() code written yesterday.
Feb 9 - Added the DIRTY_AND_CACHED_MEMBERS_ONLY flag
Feb 11 - added the catch (...) in ~XMLObjectCache() and added the #define DEFAULT_INITIAL_SIZE to GString.h to quickly change the size in one place
Feb 12 - changed several "delete pBuf" to "delete[] pBuf" to clear profiler warnings. (thanks Nadim)
May 2 - changed sscanf() to atoi() for integer conversions in MemberDescriptor.cpp because atoi() is faster.
May 9 - fixed 3 error message displays in ServerCore.cpp
May 16 - completed port to Android. Several small #include changes for memcpy() definition, and added pthread_cancel() to ServerCore.cpp
May 16 - added Android.mk to the LIbrary/Build folder
May 23 - put a define in TwoFish.h needed to get the byte ordering correct when building for Android
May 23 - small change in TwoFish.cpp to compile correctly when using the non-optimized twofish implementation
May 23 - GString::FormatV() added va_copy() inplace of a direct va_list asignment for Linux64
May 23 - Completed port to 64 bit linux. Search for _LINUX64 in GSocketHelpers.cpp GlobalInclude.h GString.h XMLObject.cpp
June 15 - Changes to Console.cpp so that the shell can also launch through a System V shell script in linux/solaris
June 15 - Added the Android folder under Samples (A Java GUI - using JNI to host ServerCore.cpp)
Aug 3 - completed port to iOS (iPhone/iPad/Mac OS X)  Search the source for _IOS to see the changes.
Aug 3 - added Xi64toa() to GString.h, used in GString.cpp and MemberDescriptor.cpp (the previous code in MemberDescriptor.cpp did not port to iOS)
Aug 4 - resolved several warnings produced by Xcode by adding extra parentheses to clarify intended operation order, also removed several variables holding unused result values.
Aug 13 - Completed the ObjectiveObjects example for iOS - Updated the root article.
Sep 23 - added the NoLibraryLink example.  Moved the SelfInitPThreads class definition from pthreads.h to pthreads.cpp.
Sep 23 - added __SERVER_CORE predirective to GSocketHelpers.cpp and ServerCore.cpp
Sep 23 - removed the Win32PThreads1998 folder under under XMlFoundation/src.  It contained the older MUCH MUCH smaller pthreads implementation that works perfectly for all the the needs of XMLFoundation.
Sep 27 - updated the XMLDialog example program to use the newer ObjectMessage() method signature that uses an __int64 inplace of an unsigned int
Sep 27 - removed the Win321998 folder from under Libraries/XMLFoundation/inc - it contained the .h files for Win32PThreads1998
Oct 13 - added the bool special values "True", "Yes" and "On" to the Byte datatype.
Oct 14 - fixed enumeration scope in example program 'RareUseExamples' - now it builds on CentOS64 with the latest g++
Oct 14 - created the makefile.linux64 for the newest example program - NoLibraryLink - which previously built only in VC++
Oct 14 - Look in the Disturbing Folder.
Oct 23 - Added MapMember() overload for bool.
Oct 24 - Removed a very old #ifdef _WIN32 from MemberDescriptor.cpp that was cutting code needed for 64 bit integers on Linux.
11/12/13 - major update complete and tested under Windows Phone, VC6, VS2012, GCC, and Xcode
11/12/13 - Look at example StartHere0 for the new bit mapping functionality
11/12/13 - Look at example TranslateXML for the new translation functionality
11/12/13 - Look at the new Windows Phone Example  search __WINPHONE to see the code changes during the port
11/12/13 - See the top few paragraphs of the main HTML article in the root XMLFoundation folder.
Dec 4 - change "gthread" to "pthread" in ServerCore.cpp for Android build
Dec 4 - Created a makefile to build the Android Example in CentOS - the previous makefile was only for Windows
Dec 4 - added "Building The Android HTTP Server on CentOS.docx" to Examples/Android
Dec 5 - changed the free .mp3 that comes with this free software - a kind of free speech - in the 'disturbing' folder
Dec 9 - Initially, the 64 bit widening was only applied to all methods in the callstack of ToXML/FromXML.  
        Now there is more 64 bit interface widening such as: 
			GString::      StartingAt() / TrimRightBytes() / TrimLeftBytes() / ComapreSub*() / + several more GString methods 
			GProfile::     GProfile()
			TWoFish::      EncryptMemoryToMemory/DecryptMemoryToMemory
			SHA256Hash()
Dec 9 - Added document "Arraignment Day" in the disturbing folder.
Dec 10 - Added 32 bit operator [] overload to GString - in addition to the 64 bit overload
Dec 10 - More 64 bit widening in GString / GStack  / GList / GHash  / GBTree /  GStringList  /  MemberDescriptor
Dec 11 - More 64 bit widening in GHash  / GArray 
Dec 11 - Ran regression tests and all example programs
Dec 12 - more work on GHash
Dec 12 - Updates to GPerformaceProfiler to use assembly on 32 bit, and microseconds on Unix/Linux
Dec 12 - Major update to the example program "ExIndexObjects"
   ~
12/21 - 
12/21 - Completed that Major update and included GSparseHash.h
12/21 - Found and fixed a bug, that involved commenting out one line of code in ProcedureCall.cpp search for "This was bad"
12/21 - There are little changes all over the place - i ran comment spell checker over it - also more 64bit widening
12/21 - All this testing was done on the new/old GThread that came out of 11/12/13
12/21 - There is a very interesting upgrade in the works for GString........ 

Dec 26 - checked all sprintf(), GString::Format() calls for "%d"'s that could be supplied an __int64 where an int32 is expected.
Dec 27 - wrote XMLObject::GetOIDKeyPartList() which causes only 1 Key Part list per type using OID's, no longer 1 per instance

Welcome to the  year   2014 ********* 2014 ********* 2014 ********* 2014 ******* 2014

January 3 2014   - Focus on fast - via less reliance on the memory manager in the operating system.

This version is about 3 times FASTER at generating the disk XML document from the memory XML docment.
It is also faster at assembling the XML memmory document.

Jan 3 - changes to XML_MUTEX macro, a performance improvement for Windows to use native CRITICAL_SECTIONS many in CacheManager
Jan 3 - Major updates to GList, namely NodeCaching, to block alloc nodes and reduce calls to new()/delete()
Jan 3 - xmlObject now uses MemberDescriptor block allocations - same reason - reduce calls to new()/delete()
Jan 3 - FactoryManager switched from GList to GArray
Jan 3 - Inlining for performance - MemberDescriptor, xmlLex, and more
Jan 3 - StackFrameCheck changed from the GList to a bare essential GStack - this one change alone DOUBLED the speed of ToXML()
Jan 3 - Changed the OIDKeyPartList to be static per type, rather than one per instance.  Note: All objects of the same type 
        have the same key definition - so this change eliminated many unnecessary identical GList instances.
Jan 3 - Changed many myGString->Format("%s%s","one","two");  into  myGString << "one" << "two"; as it is about 5 times faster.
Jan 3 - double checked alls printf/Format "%d"'s to be certain that 64 bit integers were not being put in them - (that can crash)
Jan 5 - removed the Node 'ctor() call - replace call to new() with a cast in GListNodeCache.h
Jan 5 - Tested IndexObjects on Centos 64, Windows 32 and 64
Jan 7 - Several minor changes were needed to complete the recent memory managed updates so that 
   	 - all the console example programs have been reverified, also verified the Android NDK build
Jan 8 - finished up verifying all the example programs, the MFCTypesFromXML was updated today.
Jan 8 - Added a base class to GString, a design change that will allow various GString sizeof() definitions.
Jan 9 - Updated/Tested the XMLDialog sample application - added a button to add Order LineItems
Jan 9 - removed the "5LoavesTray" example from the global project Workspace.  The example is for Windows95/98/ME.
Jan 9 - Corrected the VS2012 Solution paths to attach the debugger/Launch with F5/Ctrl F5 for all example programs.
Jan 9 - Ported to iOS, updated the iOS XCode project file, tested the iPhone Example - ObjectiveObjects
Jan 9 - Ported to Windows Phone, tested the example program.
Jan 9 - Tested every example under CentOS 64, and re-verified the Android ndk-build too.
Jan 9 - All Examples are tested and up to date - this is version 2014 Release 1
-----------------------------------------------------------------------------------------------------
Jan 11 - Finalized this Build 111 - published the article update.
Jan 15 - changed FromFile/ToFile in GString to be virtual.
Jan 15 - added 3 new methods to XMLObject, an interface simplification with GString reuse. ToXMLFile/ToXML/FromXMLFile
Jan 16 - changed several int to bool where the value was always 1 or 0 in GString
Jan 23 - removed the unused GString::AppendXMLTabs()
Jan 24 - fixed GString::AppendEscapeXMLReserved() to stop unnecessarily escaping some special chars 
Jan 24 - updated ObjectCache regression test results accordingly
Jan 24 - added 2 new serialize flags NO_CONTROL_CHAR_ESCAPE	   NO_0_31_CHAR_ESCAPE
Jan 25 - added the new class GStringCipherZip in GStringCipherZip.h
Jan 28 - more work on AppendEscapeXMLReserved(), now applies attribute ascapse rules to only attributes - not elements
Feb 1 - major work on GZip.cpp importing the newest Zlib that includes a rare bug fix - Zlib authors recommend everyone update
Feb 1 - removed 3 unused "using" statements from the Java example program for Android that uses ServerCore.cpp (Xfer uses compression)
Feb 1 - added Cipher(), DeCipher(), Compress(), and DeCompress() to GString
Feb 2 - added more overloads of the above methods in GString
Feb 5 - changed the default value of nGrowByAllocationSize from 1024 to -1 in GString.h - a major performance fix for BigData
Feb 5 - made a small change to GPerformanceTimer so that it can be used from a GUI as well as a console shell
Feb 6 - added NO_OBJECT_DATA, and made various performance improvements
Feb 6 - added the beginning of a new example program called BigData
Feb 7 - Commented the VIRTUAL toXML in XMLObject.h, references two examples of a major previously undocumented feature
211 - The (unexpected) Fixes and changes since v111 are enough to warrant 2014's Version 211.  Along with more documentation.
-----------------------------------------------------------------------------------------------------
Feb 11 - Finalized Build 211 - published the article update.
-----------------------------------------------------------------------------------------------------
Feb 13 - added to xmlobject.h: bool FromXMLFileX(GString& xmlData, const char *pzFileName, GString *pErrorDescriptionDestination = 0);
Feb 15 - _gthread_processInitialize may now be called >  1 time also it is now called automatically from global 'ctors
Feb 15 - added USE_DEPRECIATED_WIN32_THREADING build flag for 32 bit Windows XP support - platform toolset (v110_xp)
Feb 19 - Made the Base class of GString public so the class can be thrown as a C++ exception
Feb 19 - Set the VS2012 Warning Level to 4, reviewed all the output, made various small changes to silence several warnings
Feb 19 - Added (/EHa) to all the example programs in the VS2012 workspace, 
Feb 19 - commented the need for (/EHa) in ExceptionHandlerScope() in ExceptionHandler.h where the compiler warning is generated
Mar 6 - added TheOIDProtocol example
Mar 7 - removed SpookyHash Timed Rotating vs FVN = FVN is over 2x faster.  Raised default hash table size in ExIndexObjects
Mar 7 - GHash is essentially equal to GSparshHash according to data from sample program ExIndexObjects in Win64
Mar 18 - Made MANY changes with regard to using ServerCore.cpp within your own application, see all the new files in XMLFoundation/Servers/core/
Mar 18 - added many new features to Windows Service (start, stop, auto, manual, install, remove)
Mar 18 - updates to the Command Shell, and disabled the 'si' command.
Mar 18 - Added documentation updates to code everywhere I touched, the newer comments in GString.h are helpful and humorous
Mar 18 - Fixed a bug in the GBTreeIterator, I had two pop()'s where i needed top()'s - its fixed now.
Mar 19 - Added Reading and Writing of XML to GProfile where previously it used only INI format
Mar 20 - fixed a small memory leak in XMLObject, and added call to gthread_process_initialize() from global 'dtor
Mar 21 - added GlobalKeyPartLists to XMLObject it removed a non-growing memory leak(it wasnt really a problem but looks ugly in memory diagnostic tools)
Mar 21 - added new example program ContainOrInherit
Mar 21 - fixed ~XMLRelationshipWrapper().  It works just the same - but the code is better. Ran all regression tests
Mar 21 - added all the extern's at the bottom of AbstractionGeneric.h, once used only buy XMLObject they can be used anywhere.
Mar 21 - added a new example program CustomHTTPService that uses the new ServerCore hooks
Mar 22 - More work on the CustomHTTPService example program
Mar 22 - added another delete of GlobalKeyPartLists (just like Mar 21 fix - but for COM and CORBA also)
Mar 22 - Renamed CMultiPartForm to GMultiPartForm, heavily commented GHTTPMultiPartPost.cpp 
Mar 26 - widened XMLObject::ReStoreState(__int64 oid) to 64 bit
Mar 28 - reorganized the article file, now docs/index.html for easier publication
Mar 30 - As older followers of XMLFoundation know I  sometimes publish an audio .mp3 file, see XML2.mp3 in the root
Apr  4 - Fixed a bug regarding empty argument values in InterfaceInstance::GetMethodParams()
Apr5-6 - Ran the Microsoft Code Analysis in MSDev2012, reviewed all output silenced some warnings, added a few if(!Null) checks
Apr5-6 - Added two new utility classes GString0, and GString32, modified XMLObject and GString for them
Apr5-6 - see note under [m_pzkTheWord] in [IndexObjects.cpp] about why the new GStrings were created.
Apr5-6 - fixed the MSVC2012 project for CustomHTTPService to properly exclude the files from the build.
Apr 17 - Completed port to x86 WinCE  (it was ported to ARMv4 WinCE in 2007)
Apr 17 - Added GString0 and GString32 into the Linux makefile and fixed up the UNICODE support in those files
Apr 18 - Set all examples to use GProfile format of INI not XML
Apr 25 - added GString::Unicode() regardless of the _UNICODE preprocessor - and fixed it to copy the terminating null
Apr 29 - Ported the recent library changes to Linux64 - source sync to most recent Xfer build
Apr 29 - Fixed makefile errors - added -O3 to the linux GCC build, properly excluded certain files in all windows builds of CustomHTTPService example
May 9  - Added GString32 and GString0 into the Windows Phone build
May 9  - Fixed the linux makefile for the BigData example program (removed windows line feeds /r/n)
May 9  - Added GString32 and GString0 into the Android build
May 9  - return void inplace of an unused return value constant 1 in GProfile - the return was 'reserved' for support that was never needed.
May 9  - Updated the datatypes in the GProfile - it was built before the 'bool' datatype was supported in all C++ compilers
Aug 25 - Major update for GException, GCallStack and Unicode support also added VS2013 project files
9   11 -  Added GString::Int() 
Sep 15 - added GDirectory::FileSize()
Sep 15 - added the 64 default in GStack::GStack(__int64 growBy = 64)
---------------------------------------------------------------
Nov 26 - new build
---------------------------------------------------------------
Nov 26 - several small additions to GString
Nov 26 - 1 new feature addition - the ability to map 2 different object types into the same data structure.  
Nov 26 - An addition to "Contain Or Inherit" example to use the new feature and put two different object types into the same list.
Nov 26 - The new work to ServerCore.cpp is well documented in docs/index.html
Nov 26 - openssl libraries were added into the source distribution
April 2 2015 - put the GString::operator wchar_t * overload inside a conditional preprocessor #ifdef _UNICODE
April 12 - Fix made in MFCAbstractions.h to remove line 313 which was *pos = 0; when pos = 0; was intended but it was removed entirely.
August 2015 - added more methods to GString identical to CString methods for easy porting
August 2015 - Added GProcess.cpp to obtain process lists on Android, iOS, Linux, Win Phone, Win32 and Win64 also lists Network Connections
August 2015 - Added new example SMTPandTLS
August 2015 - Added "VC6.sp7" for linking with updated RPC and Winsock libraries under VC6
August 2015 - 1 bug fix in GString::FindStringBetween() that caused the method to fail in some cases
August 2015 - Added ExternalIP() to GSocketHelpers.cpp a pinging external servers to obtain the WAN IP
August 2015 - Fixed up the VS2013 project workspace built everyhting in debug/release/32/and 64 bit
August 2015 - Added the VS2015 project workspace (Note that the OpenSSL projects do not link in the vs2015 workspace)
August 2015 - Updated Linux OpenSSL binaries and headerfiles
Aug 26 - fixed up the Android build under CentOS7 - update makefile, updated openssl
Aug 26 - updated Android openssl to the most recent versions and added CSmtp into the Android build of XMLFoundation
Sep 22 - added GApp, and Andriod Studio Support, updated DynamicXMLObject.h, updated JavaXMLFoundation.cpp ***************************************
Sep 27 - made a few fixes found by code analyzer.  1 in GThread.cpp, in gthread_key_create(), also extra checks for null that have no known error case.
Oct 27 - Updated CSmtp to the most recent version released 4 days ago.
Jan 2016 - added GException into other Utilty classes - for example into GList
Jan 2016 - added new GException entries into EnglishErrors.cpp
Jan 2016 - added new Threads example showing a 3X performance improvement by using all XMLObject has to offer.
Jan 2016 - fixed an error in GException affecting 32 bit apps with not enough memory remaining to capture the callstack
Jan 2016 - Added a GException catch onto the bottom of the gthread callstack
Jan 2016 - added more checks for NULL results after calling new()
July 25 2016 - 
All for AndroidStudio 2.2 and the Gradle build, the following files have small changes: XMLFoundation.cpp
      JavaFoundation.cpp   GSocketHelpersAndroid.cpp   GProcess.cpp    GStringList.cpp   XMLFoundation.cpp    TwoFish.h    TwoFish.cpp    Sha256.cpp
July 25 2016 - Added VNC to the Examples/Android folder
July 25  - Added XMLFoundationProject to the Examples/Android folder
July 25  - updated android OpenSSL build and build process - see script in C:\XMLFoundation\Libraries\openssl\BuildingOsslForAndroid
JULY 25 - Added IMPLEMENT_FACTORY_MI() support to xmlObject. See: http://www.codeproject.com/Articles/37850/XMLFoundation?msg=5192883#xx5192883xx
July 29 -  added the return 0 to Java_a777_root_GApp_GAppGlobal_emailSend() in GApp.cpp so it sends emails from the Android device.